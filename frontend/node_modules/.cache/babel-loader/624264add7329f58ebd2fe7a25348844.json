{"ast":null,"code":"import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING, CART_SAVE_PAYMENT } from \"../constants/cartConstants\";\nimport Cookie from 'js-cookie';\nimport Axios from 'axios';\n\nconst addToCart = (productId, qty) => async (dispatch, getState) => {\n  try {\n    qty = Number(qty);\n    const {\n      data\n    } = await Axios.get(\"/api/products/\" + productId);\n    dispatch({\n      type: CART_ADD_ITEM,\n      payload: {\n        product: data._id,\n        name: data.name,\n        image: data.image,\n        price: data.price,\n        countInStock: data.countInStock,\n        qty\n      }\n    });\n    const {\n      cart: {\n        cartItems\n      }\n    } = getState();\n    Cookie.set(\"cartItems\", JSON.stringify(cartItems));\n  } catch (error) {}\n};\n\nconst removeFromCart = productId => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: productId\n  });\n  const {\n    cart: {\n      cartItems\n    }\n  } = getState();\n  Cookie.set(\"cartItems\", JSON.stringify(cartItems));\n};\n\nconst saveShipping = data => dispatch => {\n  dispatch({\n    type: CART_SAVE_SHIPPING,\n    payload: data\n  });\n};\n\nconst savePayment = data => dispatch => {\n  dispatch({\n    type: CART_SAVE_PAYMENT,\n    payload: data\n  });\n};\n\nexport { addToCart, removeFromCart, saveShipping, savePayment };","map":{"version":3,"sources":["/Users/hongliwang/Desktop/项目/Ecomozon/frontend/src/actions/cartAction.js"],"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING","CART_SAVE_PAYMENT","Cookie","Axios","addToCart","productId","qty","dispatch","getState","Number","data","get","type","payload","product","_id","name","image","price","countInStock","cart","cartItems","set","JSON","stringify","error","removeFromCart","saveShipping","savePayment"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,gBAAxB,EAA0CC,kBAA1C,EAA8DC,iBAA9D,QAAuF,4BAAvF;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAS,GAAG,CAACC,SAAD,EAAYC,GAAZ,KAAoB,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAChE,MAAI;AACFF,IAAAA,GAAG,GAAGG,MAAM,CAACH,GAAD,CAAZ;AACA,UAAM;AAAEI,MAAAA;AAAF,QAAW,MAAMP,KAAK,CAACQ,GAAN,CAAU,mBAAmBN,SAA7B,CAAvB;AACAE,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAEd,aADC;AACce,MAAAA,OAAO,EAAE;AAC5BC,QAAAA,OAAO,EAAEJ,IAAI,CAACK,GADc;AAE5BC,QAAAA,IAAI,EAAEN,IAAI,CAACM,IAFiB;AAG5BC,QAAAA,KAAK,EAAEP,IAAI,CAACO,KAHgB;AAI5BC,QAAAA,KAAK,EAAER,IAAI,CAACQ,KAJgB;AAK5BC,QAAAA,YAAY,EAAET,IAAI,CAACS,YALS;AAM5Bb,QAAAA;AAN4B;AADvB,KAAD,CAAR;AAUA,UAAM;AAACc,MAAAA,IAAI,EAAC;AAACC,QAAAA;AAAD;AAAN,QAAqBb,QAAQ,EAAnC;AACAN,IAAAA,MAAM,CAACoB,GAAP,CAAW,WAAX,EAAwBC,IAAI,CAACC,SAAL,CAAeH,SAAf,CAAxB;AACD,GAfD,CAeE,OAAOI,KAAP,EAAc,CACf;AACF,CAlBH;;AAmBA,MAAMC,cAAc,GAAIrB,SAAD,IAAe,CAACE,QAAD,EAAWC,QAAX,KAAwB;AAC1DD,EAAAA,QAAQ,CAAC;AAACK,IAAAA,IAAI,EAAEb,gBAAP;AAAyBc,IAAAA,OAAO,EAAER;AAAlC,GAAD,CAAR;AACA,QAAM;AAACe,IAAAA,IAAI,EAAC;AAACC,MAAAA;AAAD;AAAN,MAAqBb,QAAQ,EAAnC;AACEN,EAAAA,MAAM,CAACoB,GAAP,CAAW,WAAX,EAAwBC,IAAI,CAACC,SAAL,CAAeH,SAAf,CAAxB;AACL,CAJD;;AAMA,MAAMM,YAAY,GAAIjB,IAAD,IAAWH,QAAD,IAAc;AAC3CA,EAAAA,QAAQ,CAAC;AAACK,IAAAA,IAAI,EAAEZ,kBAAP;AAA2Ba,IAAAA,OAAO,EAAEH;AAApC,GAAD,CAAR;AACD,CAFD;;AAIA,MAAMkB,WAAW,GAAIlB,IAAD,IAAWH,QAAD,IAAc;AAC1CA,EAAAA,QAAQ,CAAC;AAACK,IAAAA,IAAI,EAAEX,iBAAP;AAA0BY,IAAAA,OAAO,EAAEH;AAAnC,GAAD,CAAR;AACD,CAFD;;AAGA,SAASN,SAAT,EAAoBsB,cAApB,EAAoCC,YAApC,EAAkDC,WAAlD","sourcesContent":["import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING, CART_SAVE_PAYMENT } from \"../constants/cartConstants\";\nimport Cookie from 'js-cookie';\nimport Axios from 'axios';\n\nconst addToCart = (productId, qty) => async (dispatch, getState) => {\n    try {\n      qty = Number(qty);\n      const { data } = await Axios.get(\"/api/products/\" + productId);\n      dispatch({\n        type: CART_ADD_ITEM, payload: {\n          product: data._id,\n          name: data.name,\n          image: data.image,\n          price: data.price,\n          countInStock: data.countInStock,\n          qty\n        }\n      });\n      const {cart:{cartItems}} = getState();\n      Cookie.set(\"cartItems\", JSON.stringify(cartItems));\n    } catch (error) {\n    }\n  }\nconst removeFromCart = (productId) => (dispatch, getState) => {\n    dispatch({type: CART_REMOVE_ITEM, payload: productId});\n    const {cart:{cartItems}} = getState();\n      Cookie.set(\"cartItems\", JSON.stringify(cartItems));\n}\n\nconst saveShipping = (data) => (dispatch) => {\n  dispatch({type: CART_SAVE_SHIPPING, payload: data});\n}\n\nconst savePayment = (data) => (dispatch) => {\n  dispatch({type: CART_SAVE_PAYMENT, payload: data});\n}\nexport { addToCart, removeFromCart, saveShipping ,savePayment}\n"]},"metadata":{},"sourceType":"module"}