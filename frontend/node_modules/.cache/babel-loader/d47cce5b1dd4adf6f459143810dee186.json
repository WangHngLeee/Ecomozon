{"ast":null,"code":"import { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_SAVE_REQUEST, PRODUCT_SAVE_SUCCESS, PRODUCT_SAVE_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL } from '../constants/productConstants';\nimport Axios from \"axios\";\n\nconst listProducts = (category = '', searchKeyword = '', sortOrder = '') => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await Axios.get('/api/products?category=' + category + \"&searchKeyword=\" + searchKeyword + \"&sortOrder=\" + sortOrder);\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst saveProduct = product => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_SAVE_REQUEST,\n      payload: product\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n\n    if (!product._id) {\n      const {\n        data\n      } = await Axios.post('/api/products', product, {\n        headers: {\n          'Authorization': 'HomLee ' + userInfo.token\n        }\n      });\n      dispatch({\n        type: PRODUCT_SAVE_SUCCESS,\n        payload: data\n      });\n    } else {\n      const {\n        data\n      } = await Axios.put('/api/products/' + product._id, product, {\n        headers: {\n          'Authorization': 'HomLee ' + userInfo.token\n        }\n      });\n      dispatch({\n        type: PRODUCT_SAVE_SUCCESS,\n        payload: data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_SAVE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst detailsProduct = productId => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await Axios.get('/api/products/' + productId);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst deleteProdcut = productId => async (dispatch, getState) => {\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await Axios.delete('/api/products/' + productId, {\n      headers: {\n        Authorization: 'HomLee ' + userInfo.token\n      }\n    });\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n      payload: data,\n      success: true\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { listProducts, detailsProduct, saveProduct, deleteProdcut };","map":{"version":3,"sources":["/Users/hongliwang/Desktop/项目/Ecomozon/frontend/src/actions/productActions.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_SAVE_REQUEST","PRODUCT_SAVE_SUCCESS","PRODUCT_SAVE_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","Axios","listProducts","category","searchKeyword","sortOrder","dispatch","type","data","get","payload","error","message","saveProduct","product","getState","userSignin","userInfo","_id","post","headers","token","put","detailsProduct","productId","deleteProdcut","delete","Authorization","success"],"mappings":"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","sourcesContent":["import {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_SAVE_REQUEST,\n  PRODUCT_SAVE_SUCCESS,\n  PRODUCT_SAVE_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n} from '../constants/productConstants';\n\nimport Axios from \"axios\";\n\nconst listProducts = (category ='',searchKeyword='', sortOrder='') => async (dispatch) => {\n    try {\n      dispatch({ type: PRODUCT_LIST_REQUEST });\n      const { data } = await Axios.get('/api/products?category=' + category + \"&searchKeyword=\" + searchKeyword + \"&sortOrder=\" + sortOrder);\n      dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\n    } catch (error) {\n      dispatch({ type: PRODUCT_LIST_FAIL, payload: error.message });\n    }\n  };\n \nconst saveProduct = (product) => async (dispatch, getState) => {\n  try {\n    dispatch({type: PRODUCT_SAVE_REQUEST, payload: product});\n    const { userSignin : {userInfo} } = getState();\n    if(!product._id){\n      const {data} = await Axios.post('/api/products', product, { headers:{\n        'Authorization': 'HomLee ' + userInfo.token\n      }});\n      dispatch({type: PRODUCT_SAVE_SUCCESS, payload: data});\n\n    }else{\n      const {data} = await Axios.put('/api/products/' + product._id, product, { headers:{\n        'Authorization': 'HomLee ' + userInfo.token\n      }});\n      dispatch({type: PRODUCT_SAVE_SUCCESS, payload: data});\n    }\n  } catch (error) {\n    dispatch({type: PRODUCT_SAVE_FAIL, payload: error.message});\n  }\n}\n\nconst detailsProduct = (productId) => async (dispatch) => {\n  try{\n    dispatch({type: PRODUCT_DETAILS_REQUEST, payload:productId});\n    const {data} = await Axios.get('/api/products/' + productId);\n    dispatch({type: PRODUCT_DETAILS_SUCCESS, payload:data});\n\n  }catch(error){\n    dispatch({type:PRODUCT_DETAILS_FAIL, payload:error.message});\n  }\n}\n\nconst deleteProdcut = (productId) => async (dispatch, getState) => {\n  try {\n    const {userSignin: { userInfo } } = getState();\n\n    dispatch({ type: PRODUCT_DELETE_REQUEST, payload: productId });\n    const { data } = await Axios.delete('/api/products/' + productId, {\n      headers: {\n        Authorization: 'HomLee ' + userInfo.token,\n      },\n    });\n    dispatch({ type: PRODUCT_DELETE_SUCCESS, payload: data, success: true });\n  } catch (error) {\n    dispatch({ type: PRODUCT_DELETE_FAIL, payload: error.message });\n  }\n};\n\nexport {listProducts,detailsProduct,saveProduct,deleteProdcut};"]},"metadata":{},"sourceType":"module"}